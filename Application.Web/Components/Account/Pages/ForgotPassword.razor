@page "/Account/ForgotPassword"

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using Application.Web.Data

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Forgot your password?</PageTitle>

<AuthenticationWrapper Title="Reset password">
    <Subtitle><a href="/Account/Login/" class="font-semibold">Back to login</a></Subtitle>

    <ChildContent>
        <EditForm Model="Input" FormName="forgot-password" OnValidSubmit="OnValidSubmitAsync" method="post">
            <DataAnnotationsValidator/>
            <ValidationSummary class="flex flex-col gap-1 text-red-400 mb-4 border-l-4 border-red-700 pl-4 py-2" role="alert"/>

            <div class="flex flex-col mb-6 gap-2">
                <label for="email" class="font-bold">Email</label>
                <InputText @bind-Value="Input.Email" class="form-input" autocomplete="username" aria-required="true" placeholder="name@example.com"/>
                <ValidationMessage For="() => Input.Email" class="text-red-400 font-semibold"/>
            </div>

            <button type="submit" class="block transition-all ease-in-out duration-300 w-full px-4 py-2 text-center rounded-lg bg-purple-900 hover:bg-purple-950 shadow-2xl">Reset password</button>
        </EditForm>
    </ChildContent>
</AuthenticationWrapper>

<h1>Forgot your password?</h1>
<h2>Enter your email.</h2>
<hr/>
<div class="row">
    <div class="col-md-4">

    </div>
</div>

@code {

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    private async Task OnValidSubmitAsync()
    {
        var user = await UserManager.FindByEmailAsync(Input.Email);
        if (user is null || !(await UserManager.IsEmailConfirmedAsync(user)))
        {
            // Don't reveal that the user does not exist or is not confirmed
            RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
        }

        // For more information on how to enable account confirmation and password reset please
        // visit https://go.microsoft.com/fwlink/?LinkID=532713
        var code = await UserManager.GeneratePasswordResetTokenAsync(user);
        code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
        var callbackUrl = NavigationManager.GetUriWithQueryParameters(
            NavigationManager.ToAbsoluteUri("Account/ResetPassword").AbsoluteUri,
            new Dictionary<string, object?> { ["code"] = code });

        await EmailSender.SendPasswordResetLinkAsync(user, Input.Email, HtmlEncoder.Default.Encode(callbackUrl));

        RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
    }

    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";
    }

}
