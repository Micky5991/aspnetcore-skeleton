@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@using Application.Web.Data

@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityRedirectManager RedirectManager

@if (externalLogins.Length > 0)
{
    <section>
        <form class="form-horizontal" action="Account/PerformExternalLogin" method="post">
            <div>
                <AntiforgeryToken/>
                <input type="hidden" name="ReturnUrl" value="@ReturnUrl"/>

                <div class="grid grid-cols-2 gap-2">
                    @foreach (var provider in externalLogins)
                    {
                        <button type="submit" class="block px-4 py-3 border-red-700 shadow-2xl bg-zinc-900/70 rounded-md" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                    }
                </div>
            </div>
        </form>
    </section>
}

@code {
    private AuthenticationScheme[] externalLogins = [];

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        externalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).ToArray();
    }

}
